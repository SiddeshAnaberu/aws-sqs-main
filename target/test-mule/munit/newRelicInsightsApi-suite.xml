<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="newRelicInsightsApi-suite.xml" />
	<munit:test name="sendRequest-test-error" doc:id="8608450d-3267-425c-865b-b87923d54c02">
			<munit:behavior>
				<munit:set-event doc:name="Set Input" doc:id="b40def12-a897-437a-b204-68157c9aba2e">
					<munit:payload value="#[readUrl('classpath://sendRequesttest\set-event_payload.dwl')]" encoding="UTF-8" />
					<munit:attributes value="#[readUrl('classpath://sendRequesttest\set-event_attributes.dwl')]" />
				</munit:set-event>
			<munit-tools:mock-when doc:name="Mock when" doc:id="49e3877a-45ca-4685-af99-9a2806f78e73" processor="choice">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="2b8de3d8-2db9-4857-a8f2-c027cab7800e" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="Any" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			</munit:behavior>
			<munit:execution>
				<flow-ref doc:name="Flow-ref to sendRequest" doc:id="f9bae54e-3fb0-420f-b353-761332028751" name="sendRequest" />
			</munit:execution>
		<munit:validation>
			<munit-tools:assert-that doc:name="Assert that" doc:id="4f9c871c-c6c5-4ec6-a783-a13660ec658d" is="#[MunitTools::notNullValue()]" expression='#[{&#10;	"message": error.description&#10;}]'/>
			</munit:validation>
		</munit:test>
	<munit:test name="sendRequest-test-low" doc:id="5ae26e01-c714-4ec4-bda0-fb84517013f8" >
		<munit:behavior >
			<munit:set-event doc:name="Set Input" doc:id="12785f7c-cbb7-416a-b007-062c864e71b5" >
				<munit:payload value="#[readUrl('classpath://sendRequesttestlow\set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://sendRequesttestlow\set-event_attributes.dwl')]" />
			</munit:set-event>
			<munit-tools:mock-when doc:name="Mock when" doc:id="e8934718-cacf-4bbb-be9d-b4b2717c4966" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="ece59903-0d74-46d9-9552-ddf80867b8e8" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-call flow="aws-sqsFlow" />
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to sendRequest" doc:id="34d4c933-c65f-469e-954f-bf2c3fddbbb7" name="sendRequest"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="aa7350bd-1aa1-47aa-9e49-d9180b4347f8" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import sendRequesttestlow::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="sendRequest-test-high" doc:id="f325e264-ae5c-4429-9f3f-f85b2eb11b8b" >
		<munit:behavior >
			<munit:set-event doc:name="Set Input" doc:id="862fd675-f2e2-4597-b447-507386064c34" >
				<munit:payload value="#[readUrl('classpath://sendRequesttesthigh\set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://sendRequesttesthigh\set-event_attributes.dwl')]" />
			</munit:set-event>
			<munit-tools:mock-when doc:name="Mock when" doc:id="0f4dce6e-b276-4336-ac90-900e0c6e1731" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="ece59903-0d74-46d9-9552-ddf80867b8e8" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-call flow="aws-sqsFlow" />
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to sendRequest" doc:id="36917040-9c27-4a37-8bef-a2bb279877d5" name="sendRequest"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="029a149e-d4e0-47a4-9260-7be08cf787b5" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import sendRequesttesthigh::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>


</mule>
